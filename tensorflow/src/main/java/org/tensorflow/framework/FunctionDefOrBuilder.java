// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: tensorflow/core/framework/function.proto

package org.tensorflow.framework;

public interface FunctionDefOrBuilder extends
    // @@protoc_insertion_point(interface_extends:tensorflow.FunctionDef)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>optional .tensorflow.OpDef signature = 1;</code>
   */
  boolean hasSignature();
  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>optional .tensorflow.OpDef signature = 1;</code>
   */
  org.tensorflow.framework.OpDef getSignature();
  /**
   * <pre>
   * The definition of the function's name, arguments, return values,
   * attrs etc.
   * </pre>
   *
   * <code>optional .tensorflow.OpDef signature = 1;</code>
   */
  org.tensorflow.framework.OpDefOrBuilder getSignatureOrBuilder();

  /**
   * <pre>
   * The body of the function.
   * </pre>
   *
   * <code>repeated .tensorflow.FunctionDef.Node node = 2;</code>
   */
  java.util.List<org.tensorflow.framework.FunctionDef.Node> 
      getNodeList();
  /**
   * <pre>
   * The body of the function.
   * </pre>
   *
   * <code>repeated .tensorflow.FunctionDef.Node node = 2;</code>
   */
  org.tensorflow.framework.FunctionDef.Node getNode(int index);
  /**
   * <pre>
   * The body of the function.
   * </pre>
   *
   * <code>repeated .tensorflow.FunctionDef.Node node = 2;</code>
   */
  int getNodeCount();
  /**
   * <pre>
   * The body of the function.
   * </pre>
   *
   * <code>repeated .tensorflow.FunctionDef.Node node = 2;</code>
   */
  java.util.List<? extends org.tensorflow.framework.FunctionDef.NodeOrBuilder> 
      getNodeOrBuilderList();
  /**
   * <pre>
   * The body of the function.
   * </pre>
   *
   * <code>repeated .tensorflow.FunctionDef.Node node = 2;</code>
   */
  org.tensorflow.framework.FunctionDef.NodeOrBuilder getNodeOrBuilder(
      int index);
}
